"use strict";(self.webpackChunk_playcanvas_blog=self.webpackChunk_playcanvas_blog||[]).push([[9305],{7170:e=>{e.exports=JSON.parse('{"permalink":"/introducing-esm-scripts-in-playcanvas","editUrl":"https://github.com/playcanvas/blog/tree/main/blog/2025-06-10-esm-scripts-are-here.md","source":"@site/blog/2025-06-10-esm-scripts-are-here.md","title":"Introducing ESM Scripts in PlayCanvas","description":"We\u2019re excited to announce a major step forward for PlayCanvas: ESM Scripts are now supported \u2014 and officially the recommended way to write scripts in your PlayCanvas projects.","date":"2025-06-10T00:00:00.000Z","tags":[{"inline":true,"label":"esm","permalink":"/tags/esm"},{"inline":true,"label":"modules","permalink":"/tags/modules"},{"inline":true,"label":"editor","permalink":"/tags/editor"},{"inline":true,"label":"developer","permalink":"/tags/developer"}],"readingTime":2.74,"hasTruncateMarker":true,"authors":[{"name":"Mark Lundin","title":"Software Engineer","page":{"permalink":"/authors/mark"},"socials":{"x":"https://x.com/mark_lundin","linkedin":"https://www.linkedin.com/in/marklundin2/","github":"https://github.com/marklundin"},"imageURL":"https://github.com/marklundin.png","key":"mark"}],"frontMatter":{"authors":"mark","slug":"introducing-esm-scripts-in-playcanvas","title":"Introducing ESM Scripts in PlayCanvas","tags":["esm","modules","editor","developer"]},"unlisted":false,"prevItem":{"title":"Introducing SplatTransform: The Ultimate CLI Tool for 3D Gaussian Splats","permalink":"/introducing-splat-transform-cli-tool"},"nextItem":{"title":"PlayCanvas Adopts SOGS for 20x 3DGS Compression","permalink":"/playcanvas-adopts-sogs-for-20x-3dgs-compression"}}')},7701:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>c});var n=r(7170),a=r(74848),s=r(28453);const o={authors:"mark",slug:"introducing-esm-scripts-in-playcanvas",title:"Introducing ESM Scripts in PlayCanvas",tags:["esm","modules","editor","developer"]},i=void 0,l={authorsImageUrls:[void 0]},c=[];function d(e){const t={a:"a",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsxs)(t.strong,{children:["We\u2019re excited to announce a major step forward for PlayCanvas: ",(0,a.jsx)(t.strong,{children:"ESM Scripts are now supported"})," \u2014 and officially the recommended way to write scripts in your PlayCanvas projects."]})}),"\n",(0,a.jsxs)(t.p,{children:["Back in 2016, we introduced what we now call ",(0,a.jsx)(t.a,{href:"https://blog.playcanvas.com/playcanvas-scripts-2-0/",children:"Classic Scripts"}),". At the time, this represented the state of the art in JavaScript. But things have evolved rapidly since then, and developers today expect modern tooling, clearer patterns, and better integration with the broader JavaScript ecosystem."]}),"\n",(0,a.jsx)(t.p,{children:"If you\u2019ve ever struggled with managing classic scripts, wondered why your auto-complete didn\u2019t work, or wished you could reuse code across projects more easily \u2014 this is for you."}),"\n",(0,a.jsx)(t.p,{children:"ESM (ECMAScript Modules) brings modern JavaScript development to the heart of PlayCanvas. It\u2019s faster to get started, easier to scale your project, and way more fun to work with. No more hidden globals. No more messy script loading order. Just well-structured, maintainable, and modular code \u2014 exactly how modern web development should be."}),"\n",(0,a.jsx)("video",{autoPlay:!0,muted:!0,loop:!0,controls:!0,src:"/img/pc-esm-scripts.mp4",style:{width:"100%",height:"auto"}})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>i});var n=r(96540);const a={},s=n.createContext(a);function o(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);