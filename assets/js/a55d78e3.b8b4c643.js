"use strict";(self.webpackChunk_playcanvas_blog=self.webpackChunk_playcanvas_blog||[]).push([[47283],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var a=s(96540);const r={},n=a.createContext(r);function o(e){const t=a.useContext(n);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(n.Provider,{value:t},e.children)}},66710:e=>{e.exports=JSON.parse('{"permalink":"/basis-texture-compression-arrives-in-playcanvas","editUrl":"https://github.com/playcanvas/blog/tree/main/blog/2021-01-06-basis-texture-compression-arrives-in-playcanvas.md","source":"@site/blog/2021-01-06-basis-texture-compression-arrives-in-playcanvas.md","title":"Basis Texture Compression arrives in PlayCanvas","description":"PlayCanvas implemented the fantastic hardware texture compression workflow in 2016 which allowed users to build bigger and better WebGL apps, even on low memory devices like mobile phones.","date":"2021-01-06T00:00:00.000Z","tags":[{"inline":true,"label":"compression","permalink":"/tags/compression"},{"inline":true,"label":"editor","permalink":"/tags/editor"},{"inline":true,"label":"performance","permalink":"/tags/performance"}],"readingTime":2.88,"hasTruncateMarker":true,"authors":[{"name":"Steven Yau","title":"Partner Relations Manager","page":{"permalink":"/authors/steven"},"socials":{"x":"https://x.com/yaustar","linkedin":"https://www.linkedin.com/in/stevenyau/","github":"https://github.com/yaustar"},"imageURL":"https://github.com/yaustar.png","key":"steven"}],"frontMatter":{"authors":"steven","slug":"basis-texture-compression-arrives-in-playcanvas","title":"Basis Texture Compression arrives in PlayCanvas","tags":["compression","editor","performance"]},"unlisted":false,"prevItem":{"title":"WebGL Case Study: Rebuilding the Star-Lord PBR Demo","permalink":"/webgl-case-study-rebuilding-the-star-lord-pbr-demo"},"nextItem":{"title":"PCUI 1.1.0 Adds Tree Control and Array Control","permalink":"/pcui-1-1-0-adds-tree-control-and-array-control"}}')},98586:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var a=s(66710),r=s(74848),n=s(28453);const o={authors:"steven",slug:"basis-texture-compression-arrives-in-playcanvas",title:"Basis Texture Compression arrives in PlayCanvas",tags:["compression","editor","performance"]},i=void 0,l={authorsImageUrls:[void 0]},c=[];function p(e){const t={a:"a",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["PlayCanvas implemented the fantastic hardware texture compression ",(0,r.jsx)(t.a,{href:"https://blog.playcanvas.com/webgl-texture-compression-made-easy/#more-2426",children:"workflow in 2016"})," which allowed users to build bigger and better WebGL apps, even on low memory devices like mobile phones."]}),"\n",(0,r.jsx)(t.p,{children:"JPGs and PNGs are great formats for transmission over a network because they tend to compress nicely. But once the images are downloaded and handed over to WebGL, they must decompressed to raw RGB(A) data. Using hardware compressed textures is important as decompression is performed in silicon on the GPU which avoids the need to utilize lots of memory."})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);