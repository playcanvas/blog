"use strict";(self.webpackChunk_playcanvas_blog=self.webpackChunk_playcanvas_blog||[]).push([[21842],{14020:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>t,toc:()=>r});var t=o(90410),a=o(74848),i=o(28453);const s={authors:"dave",slug:"new-and-improved-sound-component",title:"New and Improved Sound Component",tags:["editor","sound"]},d=void 0,l={authorsImageUrls:[void 0]},r=[{value:"Sound Component",id:"sound-component",level:2},{value:"Documentation &amp; Tutorials",id:"documentation--tutorials",level:2},{value:"Basic Audio",id:"basic-audio",level:3},{value:"Audio Effects",id:"audio-effects",level:3},{value:"Audio Visualizer",id:"audio-visualizer",level:3}];function u(e){const n={a:"a",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"It's been a long running issue that our Audio Source component wasn't quite feature-complete enough to do some of the more advanced features of an audio heavy game or interactive experience.\xa0Today, we're blowing those issues out of the water with a sonic boom!"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:o(32889).A+"",children:(0,a.jsx)(n.img,{alt:"sound-tutorial",src:o(37203).A+"",width:"801",height:"265"})})}),"\n",(0,a.jsx)(n.h2,{id:"sound-component",children:"Sound Component"}),"\n",(0,a.jsx)(n.p,{children:"We're just rolled out\xa0a brand new\xa0component into both the engine\xa0and the editor. The Sound Component takes on all the capabilities of the Audio Source Component (which is now deprecated) and layers on more features than\xa0violins in an orchestra."}),"\n",(0,a.jsx)(n.p,{children:"Here are the old things we're still doing:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Web Audio API support with fallback to Audio Element"}),"\n",(0,a.jsx)(n.li,{children:"3D positional sound"}),"\n",(0,a.jsx)(n.li,{children:"volume and pitch controls"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"And lets\xa0just list out all the cool new things:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Multiple sound slots\xa0per component"}),"\n",(0,a.jsx)(n.li,{children:"Individual settings for volume, pitch, autoplay, loop and overlap"}),"\n",(0,a.jsx)(n.li,{children:"Play the same sound overlapping (great for spot effects)"}),"\n",(0,a.jsx)(n.li,{children:"Fire-and-forget sounds (keeps playing after Entity is deleted)"}),"\n",(0,a.jsx)(n.li,{children:"Audio Events fired for looping, loading,\xa0stopping, pausing, etc"}),"\n",(0,a.jsx)(n.li,{children:"Access to full\xa0Web Audio API nodes (add your own effects)"}),"\n",(0,a.jsx)(n.li,{children:"Sound atlas support (play from any point to another point)"}),"\n",(0,a.jsx)(n.li,{children:"Start playing from any\xa0point in audio"}),"\n",(0,a.jsx)(n.li,{children:"Set current time, seek with in\xa0sound"}),"\n",(0,a.jsx)(n.li,{children:"Lovely new JavaScript\xa0API"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These features open up a whole bunch of doors with what you can do with audio in your games and applications. For example, overlapping sounds\xa0means you only need a single sound component to do rapid fire gun shots. Fire-and-forget sounds mean you can\xa0play and explosion sound and delete the entity without worrying about\xa0the sound stopping. Access the Web Audio nodes means you can add effects like reverb and more to your sound. Seeking within sounds makes music games possible. And in general your\xa0audio code will now be\xa0cleaner, simpler and shorter."}),"\n",(0,a.jsx)(n.h2,{id:"documentation--tutorials",children:"Documentation & Tutorials"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:o(20215).A+"",children:(0,a.jsx)(n.img,{alt:"analyzer-thin",src:o(75141).A+"",width:"900",height:"326"})})}),"\n",(0,a.jsxs)(n.p,{children:["To help you get up to speed with all the new features, we've update the\xa0",(0,a.jsx)(n.a,{href:"https://developer.playcanvas.com/user-manual/packs/components/sound/",children:"documentation"})," and the ",(0,a.jsx)(n.a,{href:"https://api.playcanvas.com/classes/Engine.SoundComponent.html",children:"reference api"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"But we've also created a few\xa0tutorials to show you how it all works."}),"\n",(0,a.jsx)(n.h3,{id:"basic-audio",children:"Basic Audio"}),"\n",(0,a.jsxs)(n.p,{children:["This ",(0,a.jsx)(n.a,{href:"https://developer.playcanvas.com/tutorials/basic-audio/",children:"tutorial"})," covers how to setup a component and\xa0managing the audio settings on different slots. Like the looping and overlap properties."]}),"\n",(0,a.jsx)(n.h3,{id:"audio-effects",children:"Audio Effects"}),"\n",(0,a.jsxs)(n.p,{children:["This ",(0,a.jsx)(n.a,{href:"https://developer.playcanvas.com/tutorials/audio-effects/",children:"tutorial"})," shows you how to add audio effects by manipulating the Web Audio API nodes"]}),"\n",(0,a.jsx)(n.h3,{id:"audio-visualizer",children:"Audio Visualizer"}),"\n",(0,a.jsxs)(n.p,{children:["This ",(0,a.jsx)(n.a,{href:"https://developer.playcanvas.com/tutorials/music-visualizer/",children:"tutorial"})," shows you how to build a music visualizer using a sound component and an Analyzer node."]}),"\n",(0,a.jsxs)(n.p,{children:["Go forth and ",(0,a.jsx)(n.strong,{children:"make some noise!"})]})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},20215:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/files/analyser-thin1-310757f86c19314372ad038dda86819e.jpg"},32889:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/files/sound-tutorial-888c543f492f76883d8f1e2aeff5a246.png"},75141:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/analyser-thin1-310757f86c19314372ad038dda86819e.jpg"},37203:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/sound-tutorial-888c543f492f76883d8f1e2aeff5a246.png"},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>d});var t=o(96540);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},90410:e=>{e.exports=JSON.parse('{"permalink":"/new-and-improved-sound-component","editUrl":"https://github.com/playcanvas/blog/tree/main/blog/2016-01-26-new-and-improved-sound-component.md","source":"@site/blog/2016-01-26-new-and-improved-sound-component.md","title":"New and Improved Sound Component","description":"It\'s been a long running issue that our Audio Source component wasn\'t quite feature-complete enough to do some of the more advanced features of an audio heavy game or interactive experience.\xa0Today, we\'re blowing those issues out of the water with a sonic boom!","date":"2016-01-26T00:00:00.000Z","tags":[{"inline":true,"label":"editor","permalink":"/tags/editor"},{"inline":true,"label":"sound","permalink":"/tags/sound"}],"readingTime":2.02,"hasTruncateMarker":true,"authors":[{"name":"Dave Evans","title":"CTO","page":{"permalink":"/authors/dave"},"socials":{"x":"https://x.com/daredevildave","linkedin":"https://www.linkedin.com/in/davewevans/","github":"https://github.com/daredevildave"},"imageURL":"https://media.licdn.com/dms/image/v2/D5603AQENzddgxVV7dA/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1701843222003?e=1730332800&v=beta&t=j98lgSCe6uWB9QD2FU0NVEuZKivY6M4JjkVBUpc9Q6E","key":"dave"}],"frontMatter":{"authors":"dave","slug":"new-and-improved-sound-component","title":"New and Improved Sound Component","tags":["editor","sound"]},"unlisted":false,"prevItem":{"title":"PLAYHACK with PlayJam starts on Monday","permalink":"/playhack-with-playjam-starts-on-monday"},"nextItem":{"title":"PLAYHACK with PlayJam","permalink":"/playhack-with-playjam-2"}}')}}]);