"use strict";(self.webpackChunk_playcanvas_blog=self.webpackChunk_playcanvas_blog||[]).push([[57180],{28411:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>c});var n=a(35309),i=a(74848),s=a(28453);const r={authors:"will",slug:"learn-the-playcanvas-api-with-the-engine-examples-browser",title:"Learn the PlayCanvas API with the Engine Examples Browser",tags:["examples"]},o=void 0,l={authorsImageUrls:[void 0]},c=[];function h(e){const t={a:"a",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["PlayCanvas has a rich JavaScript API that allows you to build just about any type of interactive content imaginable - games, playable ads, product configurators, AR, VR and more! But learning a new API can be tough. Reading ",(0,i.jsx)(t.a,{href:"https://api.playcanvas.com",children:"API reference documentation"})," is all well and good, but many people prefer to learn by experimentation. And by examining the code of real world examples. This led the PlayCanvas team to build a new application: the Engine Examples Browser."]}),"\n",(0,i.jsx)("div",{className:"iframe-container",children:(0,i.jsx)("iframe",{loading:"lazy",width:"560",height:"315",src:"https://www.youtube.com/embed/vv6Hyy8ohMc",title:"YouTube video player",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})}),"\n",(0,i.jsx)(t.p,{children:"Starting exploring the Examples Browser now:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://playcanvas.github.io/",children:(0,i.jsx)(t.strong,{children:"https://playcanvas.github.io/"})})}),"\n",(0,i.jsxs)(t.p,{children:["The browser is written entirely in TypeScript and uses a Webpack build process. Naturally, it is 100% open source (MIT license) and the source can be found ",(0,i.jsx)(t.a,{href:"https://github.com/playcanvas/engine/tree/master/examples",children:"here"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"The Examples Browser has some pretty cool features:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Gallery panel."})," Select any of the 86 examples from the (filterable) list on the left, either by name or thumbnail."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Inspect Source."})," Expand the source panel (built on the awesome Monaco code editor) on the right to inspect any example's source code."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Edit and hot reload."})," Edit any example and hit the Play button to refresh the running example. Monaco uses PlayCanvas' TypeScript definitions to provide inline API hints."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Embed links."})," Want to embed PlayCanvas examples in your own site? Simply hit the embed icon and copy the URL!"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Share to Twitter."})," Want to share a specific example with the world? Just hit the Twitter icon!"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If you would like to request an example to be added to the browser, submit an issue ",(0,i.jsx)(t.a,{href:"https://github.com/playcanvas/engine/issues",children:"here"}),". Or if you're feeling creative, submit a pull request of your own to the repo! Stay tuned for newly added examples in the coming months. Enjoy!"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>o});var n=a(96540);const i={},s=n.createContext(i);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:t},e.children)}},35309:e=>{e.exports=JSON.parse('{"permalink":"/learn-the-playcanvas-api-with-the-engine-examples-browser","editUrl":"https://github.com/playcanvas/blog/tree/main/blog/2021-07-16-learn-the-playcanvas-api-with-the-engine-examples-browser.md","source":"@site/blog/2021-07-16-learn-the-playcanvas-api-with-the-engine-examples-browser.md","title":"Learn the PlayCanvas API with the Engine Examples Browser","description":"PlayCanvas has a rich JavaScript API that allows you to build just about any type of interactive content imaginable - games, playable ads, product configurators, AR, VR and more! But learning a new API can be tough. Reading API reference documentation is all well and good, but many people prefer to learn by experimentation. And by examining the code of real world examples. This led the PlayCanvas team to build a new application: the Engine Examples Browser.","date":"2021-07-16T00:00:00.000Z","tags":[{"inline":true,"label":"examples","permalink":"/tags/examples"}],"readingTime":1.48,"hasTruncateMarker":true,"authors":[{"name":"Will Eastcott","title":"CEO","description":"Will Eastcott is an entrepreneur and veteran technologist of the games industry with experience at EA, Sony, and Activision. He has been credited in many AAA game franchises such as GTA, Call of Duty and Max Payne. He is best known for co-founding PlayCanvas, the web graphics creation platform. As CEO, he has championed the company\'s mission to make graphical web app development more accessible and collaborative through open-source technologies and cloud-based tools.","page":{"permalink":"/authors/will"},"socials":{"x":"https://x.com/willeastcott","linkedin":"https://www.linkedin.com/in/willeastcott/","github":"https://github.com/willeastcott"},"imageURL":"https://github.com/willeastcott.png","key":"will"}],"frontMatter":{"authors":"will","slug":"learn-the-playcanvas-api-with-the-engine-examples-browser","title":"Learn the PlayCanvas API with the Engine Examples Browser","tags":["examples"]},"unlisted":false,"prevItem":{"title":"A Graph Rendering Library for the Web: PCUI Graph","permalink":"/a-graph-rendering-library-for-the-web-pcui-graph"},"nextItem":{"title":"Transitioning to the New Render Component and Fill Mode API","permalink":"/transitioning-to-the-new-render-component-and-fill-mode-api"}}')}}]);